{
    "docs": [
        {
            "location": "/", 
            "text": "What's OpenVeo Portal ?\n\n\nOpenVeo Portal is a Node.js / AngularJS application. It embeds an HTTP applicative server based on \nExpress framework\n.\n\n\nIt aims to offer a portal to access medias exposed by an \nOpenVeo\n server associated to an \nOpenVeo Publish\n plugin.\n\n\nIt includes the following features :\n\n\n\n\nAn home page to present the most seen medias\n\n\nA search engine\n\n\nSupport for authentication using \nCAS\n\n\nThemes\n\n\nStatistics with support for \nPiwik\n\n\n\n\nCompatibility\n\n\nOpenVeo Portal has been tested on the following operating systems :\n\n\n\n\nWindows 7\n\n\nUbuntu 14.04\n\n\nDebian 8 (Jessy)\n\n\n\n\nOpenVeo has been tested on the following  :\n\n\n\n\nGoogle Chrome 45\n\n\nMozilla Firefox 40\n\n\nOpera 32\n\n\nInternet Explorer 11\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nScreenshots\n\n\nHome page\n\n\n\n\nVideo player", 
            "title": "INTRODUCTION"
        }, 
        {
            "location": "/#whats-openveo-portal", 
            "text": "OpenVeo Portal is a Node.js / AngularJS application. It embeds an HTTP applicative server based on  Express framework .  It aims to offer a portal to access medias exposed by an  OpenVeo  server associated to an  OpenVeo Publish  plugin.  It includes the following features :   An home page to present the most seen medias  A search engine  Support for authentication using  CAS  Themes  Statistics with support for  Piwik", 
            "title": "What's OpenVeo Portal ?"
        }, 
        {
            "location": "/#compatibility", 
            "text": "OpenVeo Portal has been tested on the following operating systems :   Windows 7  Ubuntu 14.04  Debian 8 (Jessy)   OpenVeo has been tested on the following  :   Google Chrome 45  Mozilla Firefox 40  Opera 32  Internet Explorer 11", 
            "title": "Compatibility"
        }, 
        {
            "location": "/#screenshots", 
            "text": "Home page   Video player", 
            "title": "Screenshots"
        }, 
        {
            "location": "/prerequisites/", 
            "text": "OpenVeo Portal requires and has been tested on :\n\n\n\n\nOpenveo\n (\n=2.0.0\n) with \nOpenveo Publish Plugin\n (\n=2.0.0\n) - OpenVeo Portal retrieve all its videos from an OpenVeo server\n\n\nNode.js\n (\n4.0.0 and \n5.0.0\n) - The server side of OpenVeo Portal is written in Node.js\n\n\nNpm\n (\n=2.5.1 and \n3.0.0\n) - Npm is used to install OpenVeo Portal server dependencies\n\n\nMongoDB\n (\n=3.0.0\n) - OpenVeo Portal stores user sessions in a MongoDB database\n\n\nBower\n (\n=1.5.2\n) - Bower is use to install OpenVeo Portal client dependencies\n\n\n\n\nNB :\n Moreover, for a Windows installation, Visual Studio Express is required as some OpenVeo dependencies are written in C and need to be compiled. For Linux you may have to install the package libkrb5-dev.", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/getting-started/", 
            "text": "OpenVeo Portal\n\n\nOpenveo Portal interacts with a Web Service exposed by an \nOpenVeo\n server associated to an \nOpenVeo Publish\n plugin.\n\n\nInstall OpenVeo Portal\n\n\nnpm install @openveo/portal\n\n\n\nNb :\n You will be prompted for some configuration. Don't worry if you made an error, you can edit configuration anytime using \nadvanced configuration\n.\n\n\nInstall a custom theme\n\n\nBy default, OpenVeo Portal comes from a default theme. If this theme does not suite your graphical interface, you can customize OpenVeo Portal with your own theme and install it into \nassets/themes\n.\n\n\nLaunch the application\n\n\nOpenVeo Portal is now installed. Launch it :\n\n\nnode server.js", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#openveo-portal", 
            "text": "Openveo Portal interacts with a Web Service exposed by an  OpenVeo  server associated to an  OpenVeo Publish  plugin.", 
            "title": "OpenVeo Portal"
        }, 
        {
            "location": "/getting-started/#install-openveo-portal", 
            "text": "npm install @openveo/portal  Nb :  You will be prompted for some configuration. Don't worry if you made an error, you can edit configuration anytime using  advanced configuration .", 
            "title": "Install OpenVeo Portal"
        }, 
        {
            "location": "/getting-started/#install-a-custom-theme", 
            "text": "By default, OpenVeo Portal comes from a default theme. If this theme does not suite your graphical interface, you can customize OpenVeo Portal with your own theme and install it into  assets/themes .", 
            "title": "Install a custom theme"
        }, 
        {
            "location": "/getting-started/#launch-the-application", 
            "text": "OpenVeo Portal is now installed. Launch it :  node server.js", 
            "title": "Launch the application"
        }, 
        {
            "location": "/advanced-configuration/", 
            "text": "Introduction\n\n\nConfiguration files are all in user's directory under \n~/.openveo/portal\n\n\n\n\n~/.openveo/core/conf.json\n\n\n~/.openveo/core/databaseConf.json\n\n\n~/.openveo/core/loggerConf.json\n\n\n~/.openveo/core/serverConf.json\n\n\n~/.openveo/core/webservicesConf.json\n\n\n\n\nNb :\n You must restart OpenVeo Portal after modifications.\n\n\nConfigure OpenVeo Portal\n\n\nOpen \n~/.openveo/portal/conf.json\n\n\n{\n  \ntheme\n: \ndefault\n, // The name of the theme to use (this is the name of the directory in assets/themes)\n  \nexposedFilter\n: [ // A list of custom properties' ids defined in OpenVeo Publish to add as search engine filters\n    \nVJWL6-0Cx\n,\n    \nNkLcut70x\n,\n    \n4yYs5f0Ag\n\n  ],\n  \ncategoriesFilter\n: \n1443702123703\n, // Id of the taxonomy \ncategories\n defined in OpenVeo Publish\n  \nprivateFilter\n: [ // A list of groups' ids, defined in OpenVeo, only content in this list of groups will be available to an authenticated user\n    \n4keznvtlW\n\n  ],\n  \npublicFilter\n: [ // A list of groups' ids, defined in OpenVeo, only content in this list of groups will be available to an anonymous user\n    \nVyog3_KgW\n\n  ],\n  \ncache\n: {\n    \nfilterTTL\n: 600, // Time (in seconds) to keep the list of categories and custom properties' values in cache\n    \nvideoTTL\n: 60 // Time (in seconds) to keep information about a video in cache\n  },\n  \nuseDialog\n: true // Set if UI open videos in a dialog popin, if false user will open video by navigate to URL\n}\n\n\n\n\nConfigure database access\n\n\nOpen \n~/.openveo/portal/databaseConf.json\n\n\n{\n  \ntype\n : \nmongodb\n, // Do not change\n  \nhost\n : \nlocalhost\n, // MongoDB server host\n  \nport\n : 27017, // MongoDB port\n  \ndatabase\n : \nDATABASE_NAME\n, // Replace DATABASE_NAME by the name of the OpenVeo Portal database\n  \nusername\n : \nDATABASE_USER_NAME\n, // Replace DATABASE_USER_NAME by the name of the database user\n  \npassword\n : \nDATABASE_USER_PWD\n // Replace DATABASE_USER_PWD  by the password of the database user\n}\n\n\n\n\nConfigure the logger\n\n\nOpen \n~/.openveo/portal/loggerConf.json\n\n\n{\n  \nfileName\n : \n/var/log/openveo/openveo-portal.log\n, // Path to application log file\n  \nlevel\n : \ninfo\n, // Log level\n  \nmaxFileSize\n : 1048576, // Maximum log file size (in Bytes)\n  \nmaxFiles\n : 2 // Maximum number of files archived\n}\n\n\n\n\nConfigure the server\n\n\nOpen \n~/.openveo/core/serverConf.json\n\n\n{\n  \nport\n: PORT, // Replace PORT by the HTTP server port to use (e.g. 3000)\n  \nsessionSecret\n: \nSECRET\n, // Replace SECRET by a secret used to secure HTTP sessions\n  \nauth\n: {\n    \ntype\n: \ncas\n, // The authentication mechanism to use (only cas is supported right now)\n    \ncas\n: { // CAS configuration in case of type \ncas\n\n      \nversion\n: \n3\n, // The version of the CAS server\n      \nservice\n: \nhttps://my-openveo-portal.com\n, // The service to use to authenticate to the CAS server\n      \nurl\n: \nhttps://my-cas-server.com:8443/cas\n, // The url of the CAS server\n      \ncertificate\n: \ncas.crt\n // The absolute path to the CAS server certificate\n    }\n  }\n}\n\n\n\n\nConfigure the access to OpenVeo Web Service\n\n\nOpen \n~/.openveo/portal/webservicesConf.json\n\n\n{\n \npath\n: \nhttps://www.my-openveo-ws.com\n, // Complete path to the web service (including port if necessary)\n \nclientID\n: \n65d6247f0293049523d6a5e2efdf49ac07b51600\n, // OpenVeo Portal id\n \nsecretID\n: \n8a7b0d43a631b52cf15e89eba7a65f274ccc7f73\n, // OpenVeo Portal secret\n \ncertificate\n: \nserver.crt\n // OpenVeo Web Service certificate\n}", 
            "title": "Advanced configuration"
        }, 
        {
            "location": "/advanced-configuration/#introduction", 
            "text": "Configuration files are all in user's directory under  ~/.openveo/portal   ~/.openveo/core/conf.json  ~/.openveo/core/databaseConf.json  ~/.openveo/core/loggerConf.json  ~/.openveo/core/serverConf.json  ~/.openveo/core/webservicesConf.json   Nb :  You must restart OpenVeo Portal after modifications.", 
            "title": "Introduction"
        }, 
        {
            "location": "/advanced-configuration/#configure-openveo-portal", 
            "text": "Open  ~/.openveo/portal/conf.json  {\n   theme :  default , // The name of the theme to use (this is the name of the directory in assets/themes)\n   exposedFilter : [ // A list of custom properties' ids defined in OpenVeo Publish to add as search engine filters\n     VJWL6-0Cx ,\n     NkLcut70x ,\n     4yYs5f0Ag \n  ],\n   categoriesFilter :  1443702123703 , // Id of the taxonomy  categories  defined in OpenVeo Publish\n   privateFilter : [ // A list of groups' ids, defined in OpenVeo, only content in this list of groups will be available to an authenticated user\n     4keznvtlW \n  ],\n   publicFilter : [ // A list of groups' ids, defined in OpenVeo, only content in this list of groups will be available to an anonymous user\n     Vyog3_KgW \n  ],\n   cache : {\n     filterTTL : 600, // Time (in seconds) to keep the list of categories and custom properties' values in cache\n     videoTTL : 60 // Time (in seconds) to keep information about a video in cache\n  },\n   useDialog : true // Set if UI open videos in a dialog popin, if false user will open video by navigate to URL\n}", 
            "title": "Configure OpenVeo Portal"
        }, 
        {
            "location": "/advanced-configuration/#configure-database-access", 
            "text": "Open  ~/.openveo/portal/databaseConf.json  {\n   type  :  mongodb , // Do not change\n   host  :  localhost , // MongoDB server host\n   port  : 27017, // MongoDB port\n   database  :  DATABASE_NAME , // Replace DATABASE_NAME by the name of the OpenVeo Portal database\n   username  :  DATABASE_USER_NAME , // Replace DATABASE_USER_NAME by the name of the database user\n   password  :  DATABASE_USER_PWD  // Replace DATABASE_USER_PWD  by the password of the database user\n}", 
            "title": "Configure database access"
        }, 
        {
            "location": "/advanced-configuration/#configure-the-logger", 
            "text": "Open  ~/.openveo/portal/loggerConf.json  {\n   fileName  :  /var/log/openveo/openveo-portal.log , // Path to application log file\n   level  :  info , // Log level\n   maxFileSize  : 1048576, // Maximum log file size (in Bytes)\n   maxFiles  : 2 // Maximum number of files archived\n}", 
            "title": "Configure the logger"
        }, 
        {
            "location": "/advanced-configuration/#configure-the-server", 
            "text": "Open  ~/.openveo/core/serverConf.json  {\n   port : PORT, // Replace PORT by the HTTP server port to use (e.g. 3000)\n   sessionSecret :  SECRET , // Replace SECRET by a secret used to secure HTTP sessions\n   auth : {\n     type :  cas , // The authentication mechanism to use (only cas is supported right now)\n     cas : { // CAS configuration in case of type  cas \n       version :  3 , // The version of the CAS server\n       service :  https://my-openveo-portal.com , // The service to use to authenticate to the CAS server\n       url :  https://my-cas-server.com:8443/cas , // The url of the CAS server\n       certificate :  cas.crt  // The absolute path to the CAS server certificate\n    }\n  }\n}", 
            "title": "Configure the server"
        }, 
        {
            "location": "/advanced-configuration/#configure-the-access-to-openveo-web-service", 
            "text": "Open  ~/.openveo/portal/webservicesConf.json  {\n  path :  https://www.my-openveo-ws.com , // Complete path to the web service (including port if necessary)\n  clientID :  65d6247f0293049523d6a5e2efdf49ac07b51600 , // OpenVeo Portal id\n  secretID :  8a7b0d43a631b52cf15e89eba7a65f274ccc7f73 , // OpenVeo Portal secret\n  certificate :  server.crt  // OpenVeo Web Service certificate\n}", 
            "title": "Configure the access to OpenVeo Web Service"
        }, 
        {
            "location": "/production/", 
            "text": "Launch in production\n\n\nTo use OpenVeo Portal in a production environment, start the server in production :\n\n\n# Starts OpenVeo Portal application in production environment\nNODE_ENV=production node server.js\n\n\n\nNb :\n You should also consider launching the process as a deamon.", 
            "title": "Production"
        }, 
        {
            "location": "/production/#launch-in-production", 
            "text": "To use OpenVeo Portal in a production environment, start the server in production :  # Starts OpenVeo Portal application in production environment\nNODE_ENV=production node server.js  Nb :  You should also consider launching the process as a deamon.", 
            "title": "Launch in production"
        }, 
        {
            "location": "/developers/prerequisites/", 
            "text": "OpenVeo Portal requires additional elements for development :\n\n\n\n\nGit\n - openveo-portal is versioned with git\n\n\nRuby\n / \nSass\n / \nCompass\n - CSS is written using SASS / Compass\n\n\nGrunt\n - Grunt is used to launch tests and compile sources\n\n\nProtractor\n - End to end tests are performed using Protractor\n\n\nMkdocs\n - To generate this documentation", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/developers/installation/", 
            "text": "Clone project from git\n\n\ngit clone git@github.com:veo-labs/openveo-portal.git openveo-portal\n\n\n\nInstall OpenVeo Portal\n\n\ncd openveo-portal\nnpm install", 
            "title": "Installation"
        }, 
        {
            "location": "/developers/installation/#clone-project-from-git", 
            "text": "git clone git@github.com:veo-labs/openveo-portal.git openveo-portal", 
            "title": "Clone project from git"
        }, 
        {
            "location": "/developers/installation/#install-openveo-portal", 
            "text": "cd openveo-portal\nnpm install", 
            "title": "Install OpenVeo Portal"
        }, 
        {
            "location": "/developers/conf/", 
            "text": "Introduction\n\n\nSome project's development configuration is made in \nconf.json\n file.\n\n\nLoad JavaScript files\n\n\nThe list of JavaScript files to load are defined in \nconf.json\n :\n\n\n{\n  scriptLibFiles: { // List of JavaScript files to load first\n    base: [ // List of JavaScript files to load on both development and production environments\n      ...\n    ],\n    dev: [ // List of JavaScript files to load on development environment\n      ...\n    ],\n    prod: [ // List of JavaScript files to load on production environment\n      ...\n    ]\n  },\n  scriptFiles: { // List of JavaScript files to load next\n    dev: [ // List of JavaScript files to load on development environment\n      ...\n    ],\n    prod: [ // List of JavaScript files to load on production environment\n      ...\n    ]\n  }\n}\n\n\n\n\nLoad CSS files\n\n\nThe list of CSS files to load are defined in \nconf.json\n :\n\n\n{\n  cssFiles: [ // List of CSS files to load\n    ...\n  ]\n}", 
            "title": "conf.json"
        }, 
        {
            "location": "/developers/conf/#introduction", 
            "text": "Some project's development configuration is made in  conf.json  file.", 
            "title": "Introduction"
        }, 
        {
            "location": "/developers/conf/#load-javascript-files", 
            "text": "The list of JavaScript files to load are defined in  conf.json  :  {\n  scriptLibFiles: { // List of JavaScript files to load first\n    base: [ // List of JavaScript files to load on both development and production environments\n      ...\n    ],\n    dev: [ // List of JavaScript files to load on development environment\n      ...\n    ],\n    prod: [ // List of JavaScript files to load on production environment\n      ...\n    ]\n  },\n  scriptFiles: { // List of JavaScript files to load next\n    dev: [ // List of JavaScript files to load on development environment\n      ...\n    ],\n    prod: [ // List of JavaScript files to load on production environment\n      ...\n    ]\n  }\n}", 
            "title": "Load JavaScript files"
        }, 
        {
            "location": "/developers/conf/#load-css-files", 
            "text": "The list of CSS files to load are defined in  conf.json  :  {\n  cssFiles: [ // List of CSS files to load\n    ...\n  ]\n}", 
            "title": "Load CSS files"
        }, 
        {
            "location": "/developers/compilation/", 
            "text": "Introduction\n\n\nOpenVeo Portal is written using AngularJS and SASS / Compass. SASS files need to be compiled to generate the CSS and JavaScript files can be minified and aggregated for better performance.\n\n\nCompiling SASS files\n\n\nYou can compile the SASS files using the following command :\n\n\ngrunt compass:dist\n\n\n\nOr you can watch SASS files changes using the following command :\n\n\ngrunt\n\n\n\nCompiling JavaScript files\n\n\nYou'll probably want to compile AngularJS files, in production, for better performance. You can do it using :\n\n\ngrunt dist", 
            "title": "CSS / SASS / JS compilation"
        }, 
        {
            "location": "/developers/compilation/#introduction", 
            "text": "OpenVeo Portal is written using AngularJS and SASS / Compass. SASS files need to be compiled to generate the CSS and JavaScript files can be minified and aggregated for better performance.", 
            "title": "Introduction"
        }, 
        {
            "location": "/developers/compilation/#compiling-sass-files", 
            "text": "You can compile the SASS files using the following command :  grunt compass:dist  Or you can watch SASS files changes using the following command :  grunt", 
            "title": "Compiling SASS files"
        }, 
        {
            "location": "/developers/compilation/#compiling-javascript-files", 
            "text": "You'll probably want to compile AngularJS files, in production, for better performance. You can do it using :  grunt dist", 
            "title": "Compiling JavaScript files"
        }, 
        {
            "location": "/developers/logger/", 
            "text": "Introduction\n\n\nAll server logs are performed by module \nWinston\n.\n\n\nUse OpenVeo Portal logger\n\n\nBy default OpenVeo Portal creates one logger named \nportal\n. You can use this logger using the following code :\n\n\nprocess.logger.silly('Silly log');\nprocess.logger.debug('Debug log');\nprocess.logger.verbose('Verbose log');\nprocess.logger.info('Info log');\nprocess.logger.warn('Warn log');\nprocess.logger.error('Error log');", 
            "title": "Logger"
        }, 
        {
            "location": "/developers/logger/#introduction", 
            "text": "All server logs are performed by module  Winston .", 
            "title": "Introduction"
        }, 
        {
            "location": "/developers/logger/#use-openveo-portal-logger", 
            "text": "By default OpenVeo Portal creates one logger named  portal . You can use this logger using the following code :  process.logger.silly('Silly log');\nprocess.logger.debug('Debug log');\nprocess.logger.verbose('Verbose log');\nprocess.logger.info('Info log');\nprocess.logger.warn('Warn log');\nprocess.logger.error('Error log');", 
            "title": "Use OpenVeo Portal logger"
        }, 
        {
            "location": "/developers/coding-standards/", 
            "text": "OpenVeo Portal uses Node.js coding standards. \nESLint\n is used to validate coding rules. You can launch a code verification using the following command :\n\n\ngrunt eslint\n\n\n\nNb :\n Both Node.js and AngularJS parts of OpenVeo Portal must respect the same coding standards", 
            "title": "Coding standards"
        }, 
        {
            "location": "/developers/end-to-end-tests/", 
            "text": "Introduction\n\n\nEnd to end tests are performed using \nProtractor\n.\n\n\nYou need to have a running OpenVeo Web Service server before starting tests.\n\n\nWARNING\n : Each time you launch end to end tests, all information are removed from OpenVeo ! Launch OpenVeo Web Service with option \n--databaseConf\n to specify a test database.\n\n\nInstall selenium web driver and chrome driver\n\n\nnode_modules/grunt-protractor-runner/node_modules/protractor/bin/webdriver-manager update\n\n\n\nConfigure tests\n\n\nWhen launching tests, an OpenVeo Portal server is automatically spawned and must be configured through \nserverTestConf.json\n. Typically you may want to change the server port.\n\n\n~/.openveo/core/serverTestConf.json\n\n\n{\n  \nport\n: 3004,\n  \nsessionSecret\n: \n2bXELdIqoT9Tbv5i1RfcXGEIE+GQS+XYbwVn0qEx\n\n}\n\n\n\n\nFinally the logger has to be configured through \nloggerTestConf.json\n. Typically you may want to deactivate logger standard output.\n\n\n~/.openveo/core/loggerTestConf.json\n\n\n{\n  \nlevel\n: \ninfo\n,\n  \nmaxFileSize\n: 1048576,\n  \nmaxFiles\n: 2,\n  \nfileName\n: \n/tmp/openveo-portal.log\n,\n  \nconsole\n: false\n}\n\n\n\n\nconsole: false\n will deactivate standard output.\n\n\nCreate test\n\n\nCreate your test file in \ntests/client/e2eTests/\n then update the list of suites, if necessary, in \ntests/client/e2eTests/protractorSuites.json\n.\n\n\nDebug\n\n\nIf a test fails, a screenshot of the browser at the instant is taken and available in \nbuild/screenshots\n of the core.\n\n\nLaunch end to end tests\n\n\n# Launch all end to end tests on chrome\ngrunt test-e2e --capabilities=\"{\\\"browserName\\\": \\\"chrome\\\"}\" --directConnect=true\n\n# Launch all end to end tests on firefox\ngrunt test-e2e --capabilities=\"{\\\"browserName\\\": \\\"firefox\\\"}\" --directConnect=true\n\n# Launch only portal suite on chrome\ngrunt test-e2e --capabilities=\"{\\\"browserName\\\": \\\"chrome\\\"}\" --directConnect=true --suite=\"portal\"", 
            "title": "End to end tests"
        }, 
        {
            "location": "/developers/end-to-end-tests/#introduction", 
            "text": "End to end tests are performed using  Protractor .  You need to have a running OpenVeo Web Service server before starting tests.  WARNING  : Each time you launch end to end tests, all information are removed from OpenVeo ! Launch OpenVeo Web Service with option  --databaseConf  to specify a test database.", 
            "title": "Introduction"
        }, 
        {
            "location": "/developers/end-to-end-tests/#install-selenium-web-driver-and-chrome-driver", 
            "text": "node_modules/grunt-protractor-runner/node_modules/protractor/bin/webdriver-manager update", 
            "title": "Install selenium web driver and chrome driver"
        }, 
        {
            "location": "/developers/end-to-end-tests/#configure-tests", 
            "text": "When launching tests, an OpenVeo Portal server is automatically spawned and must be configured through  serverTestConf.json . Typically you may want to change the server port.  ~/.openveo/core/serverTestConf.json  {\n   port : 3004,\n   sessionSecret :  2bXELdIqoT9Tbv5i1RfcXGEIE+GQS+XYbwVn0qEx \n}  Finally the logger has to be configured through  loggerTestConf.json . Typically you may want to deactivate logger standard output.  ~/.openveo/core/loggerTestConf.json  {\n   level :  info ,\n   maxFileSize : 1048576,\n   maxFiles : 2,\n   fileName :  /tmp/openveo-portal.log ,\n   console : false\n}  console: false  will deactivate standard output.", 
            "title": "Configure tests"
        }, 
        {
            "location": "/developers/end-to-end-tests/#create-test", 
            "text": "Create your test file in  tests/client/e2eTests/  then update the list of suites, if necessary, in  tests/client/e2eTests/protractorSuites.json .", 
            "title": "Create test"
        }, 
        {
            "location": "/developers/end-to-end-tests/#debug", 
            "text": "If a test fails, a screenshot of the browser at the instant is taken and available in  build/screenshots  of the core.", 
            "title": "Debug"
        }, 
        {
            "location": "/developers/end-to-end-tests/#launch-end-to-end-tests", 
            "text": "# Launch all end to end tests on chrome\ngrunt test-e2e --capabilities=\"{\\\"browserName\\\": \\\"chrome\\\"}\" --directConnect=true\n\n# Launch all end to end tests on firefox\ngrunt test-e2e --capabilities=\"{\\\"browserName\\\": \\\"firefox\\\"}\" --directConnect=true\n\n# Launch only portal suite on chrome\ngrunt test-e2e --capabilities=\"{\\\"browserName\\\": \\\"chrome\\\"}\" --directConnect=true --suite=\"portal\"", 
            "title": "Launch end to end tests"
        }
    ]
}